# https://webdevblog.ru/kak-ispolzovat-django-postgresql-i-docker/
version: '3.9'

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    command: gunicorn config.wsgi:application --bind 0.0.0.0:8005
    volumes:
      - static_volume:/home/ms4_shop/web/staticfiles
      - media_volume:/home/ms4_shop/web/media
    expose:
      - "8005"
    env_file:
      - ./.env
    depends_on:
      - db
    restart: on-failure
  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
    restart: on-failure
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/ms4_shop/web/staticfiles
      - media_volume:/home/ms4_shop/web/media
    ports:
      - "8005:80"
    depends_on:
      - web
    restart: on-failure
volumes:
  postgres_data:
  static_volume:
  media_volume:

